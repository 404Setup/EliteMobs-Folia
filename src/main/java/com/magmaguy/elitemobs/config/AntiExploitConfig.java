package com.magmaguy.elitemobs.config;

import com.magmaguy.elitemobs.MetadataHandler;
import org.bukkit.Bukkit;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.configuration.file.YamlConfiguration;

import java.io.File;
import java.io.IOException;

public class AntiExploitConfig {

    public static final String ANTIEXPLOIT_MESSAGE = "AntiExploit message";
    public static final String DARKROOM_ANTIEXPLOIT_1 = "Enable darkroom antiexploit 1";
    public static final String DARKROOM_ANTIEXPLOIT_2 = "Enable darkroom antiexploit 2";
    public static final String LARGE_DARKROOM_ANTIEXPLOIT = "Enable large darkroom antiexploit";
    public static final String ENDERMAN_HEIGHT_ANTIEXPLOIT = "Enable enderman height antiexploit";
    public static final String MOUNT_ANTIEXPLOIT = "Enable mount antiexploit";
    public static final String TOWER_ANTIEXPLOIT = "Enable tower antiexploit";
    public static final String DENSITY_ANTIEXPLOIT = "Enable density antiexploit";

    public static FileConfiguration fileConfiguration;

    public static void initializeConfig() {
        File file = new File(MetadataHandler.PLUGIN.getDataFolder().getPath(), "AntiExploit.yml");

        if (!file.exists())
            try {
                file.getParentFile().mkdirs();
                file.createNewFile();
            } catch (IOException ex) {
                Bukkit.getLogger().warning("[EliteMobs] Error generating the plugin file: " + file.getName());
            }

        fileConfiguration = YamlConfiguration.loadConfiguration(file);

        fileConfiguration.addDefault(ANTIEXPLOIT_MESSAGE, "&c[EM AntiExploit] &7Nearby elite won't drop special loot.");
        fileConfiguration.addDefault(DARKROOM_ANTIEXPLOIT_1, true);
        fileConfiguration.addDefault(DARKROOM_ANTIEXPLOIT_2, true);
        fileConfiguration.addDefault(LARGE_DARKROOM_ANTIEXPLOIT, true);
        fileConfiguration.addDefault(ENDERMAN_HEIGHT_ANTIEXPLOIT, true);
        fileConfiguration.addDefault(MOUNT_ANTIEXPLOIT, true);
        fileConfiguration.addDefault(TOWER_ANTIEXPLOIT, true);
        fileConfiguration.addDefault(DENSITY_ANTIEXPLOIT, true);

        fileConfiguration.options().copyDefaults(true);
        UnusedNodeHandler.clearNodes(fileConfiguration);

        try {
            fileConfiguration.save(file);
        } catch (IOException e) {
            e.printStackTrace();
        }

    }

}
